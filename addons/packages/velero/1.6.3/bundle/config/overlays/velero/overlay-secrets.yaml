#@ load("/values.star", "values")
#@ load("/values.star", "resource")
#@ load("/values.star", "secret_name")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:base64", "base64")

#@ if values.credential.useSecret:

#@overlay/match by=overlay.subset(resource("Secret", "cloud-credentials"))
---
#@overlay/match-child-defaults missing_ok=True
apiVersion: v1
kind: Secret
metadata:
    name: secret_name()
    namespace:
type: Opaque
data:
    cloud: #@ base64.encode(values.credential.secretContents.cloud)
    #! extraEnvVars: #@ base64.encode(values.credential.secretContents)

#@overlay/match by=overlay.subset(resource("Deployment", "velero"))
---
apiVersion: v1
kind: Deployment
spec:
  template:
    spec:
      volumes:
        #@overlay/match by=overlay.subset({"name":"cloud-credentials"})
        #! #@overlay/match missing_ok=True
        #@ if values.credential.useSecret:
        #@overlay/replace
        - name: cloud-credentials
          secret:
            secretName: secret_name()
        #@ else:
        #! This remove is not working
        #@overlay/remove
        - name: cloud-credentials
          secret:
            secretName: secret_name()
        #@ end

#@overlay/match by=overlay.subset(resource("DaemonSet", "restic"))
---
#@overlay/match-child-defaults missing_ok=True
apiVersion: v1
kind: DaemonSet
spec:
  template:
    spec:
      volumes:
        #@overlay/match by=overlay.subset({"name":"cloud-credentials"})
        #! #@overlay/match missing_ok=True
        #@ if values.credential.useSecret:
        #@overlay/replace
        - name: cloud-credentials
          secret:
            secretName: secret_name()
        #@ else:
        #! This remove is not working
        #@overlay/remove
        - name: cloud-credentials
          secret:
            secretName: secret_name()
        #@ end
#@ end