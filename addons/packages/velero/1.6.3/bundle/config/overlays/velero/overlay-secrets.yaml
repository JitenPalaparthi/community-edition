#@ load("/values.star", "values")
#@ load("/values.star", "resource")
#@ load("/values.star", "secret_name")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:base64", "base64")

#@ if not values.credential.useDefaultSecret:
#@overlay/match by=overlay.subset(resource("Secret", "cloud-credentials"))
#@overlay/remove
---

#@ else:
#@overlay/match by=overlay.subset(resource("Secret", "cloud-credentials"))
---
#@overlay/match-child-defaults missing_ok=True
metadata:
    name: #@ secret_name()
type: Opaque
#@overlay/match-child-defaults missing_ok=True
data:
    cloud: #@ base64.encode(values.credential.secretContents.cloud)
    #@ if/end values.credential.extraEnvVars:
    extraEnvVars: #@ base64.encode(values.credential.extraEnvVars)
    #@ if/end values.credential.extraSecretRef:
    extraSecretRef: #@ base64.encode(values.credential.extraSecretRef)
#@ end

#@overlay/match by=overlay.subset(resource("Deployment", "velero"))
---
spec:
  template:
    spec:
      volumes:
        #@overlay/match by=overlay.subset({"name":"cloud-credentials"})
        #@overlay/replace
          - name: cloud-credentials
            secret:
              secretName: #@ secret_name()

#@ if/end values.deployRestic:
#@overlay/match by=overlay.subset(resource("DaemonSet", "restic"))
---
#@overlay/match-child-defaults missing_ok=True
spec:
  template:
    spec:
      volumes:
        #@overlay/match by=overlay.subset({"name":"cloud-credentials"})
        #@overlay/replace
          - name: cloud-credentials
            secret:
              secretName: #@ secret_name()
